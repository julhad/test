on:
    workflow_dispatch:

jobs:
  parse-websites:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.website-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set websites matrix
        id: website-matrix
        run: echo "matrix=$(jq -c . < ./websites.json)" >> $GITHUB_OUTPUT

  axe-core-cli:
    needs: parse-websites
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.parse-websites.outputs.matrix)}}
    steps: 
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - name: Install axe-core/cli
          run: npm i @axe-core/cli -g
        - name: Cache chromedriver
          id: cache-chromedriver
          uses: actions/cache@v3
          with:
            path: /usr/local/bin/chromedriver
            key: ${{ runner.os }}-chromedriver
        - name: Install chromedriver
          if: steps.cache-chromedriver.outputs.cache-hit != 'true'
          uses: nanasess/setup-chromedriver@v2
        - name: Testing ${{ matrix.name }}
          run: axe ${{ matrix.url }} --chromedriver-path='/usr/local/bin/chromedriver' --save ${{ matrix.name }}-$(date +'%Y-%m-%dT%H:%M:%S').json
        - name: Upload result
          uses: actions/upload-artifact@v3
          with:
            name: ${{ matrix.name }}
            path: ${{ matrix.name }}-*.json

  save-results:
    runs-on: ubuntu-latest
    needs: [axe-core-cli]
    steps:
      - name: Download results
        uses: actions/download-artifact@v3
        with:
          path: results
